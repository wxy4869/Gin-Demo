basePath: /api/v1
definitions:
  database.User:
    properties:
      age:
        type: integer
      avatar_url:
        type: string
      email:
        type: string
      password:
        type: string
      sex:
        type: string
      user_id:
        type: integer
      user_info:
        type: string
      username:
        type: string
    type: object
  response.CommonA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.GetUserInfoA:
    properties:
      message:
        type: string
      poster:
        $ref: '#/definitions/database.User'
      success:
        type: boolean
      user:
        $ref: '#/definitions/database.User'
    type: object
  response.GetUserInfoQ:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  response.LoginA:
    properties:
      message:
        type: string
      success:
        type: boolean
      token:
        type: string
      user:
        $ref: '#/definitions/database.User'
    type: object
  response.LoginQ:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.RegisterQ:
    properties:
      email:
        type: string
      password1:
        type: string
      password2:
        type: string
      username:
        type: string
    required:
    - password1
    - password2
    - username
    type: object
host: localhost:8889
info:
  contact: {}
  description: MeowMeow
  title: ginDemo
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名，密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.LoginQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginA'
      summary: 登录
      tags:
      - 用户模块
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名，密码，确认密码，邮箱
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.RegisterQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonA'
      summary: 注册
      tags:
      - 用户模块
  /user/info:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户 ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetUserInfoQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetUserInfoA'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - 用户模块
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
